{"version":3,"sources":["components/cell.js","components/board.js","components/Banner.js","components/start-btn.js","App.js","index.js"],"names":["Cell","type","id","this","props","console","log","cellbox","val","turn","getturn","className","cut","onClick","CellClick","get_char","React","Component","Board","boardarray","map","cell","index","Banner","winner","showBoard","texttoshow","p1","p2","length","resetState","Start","getplayer1","document","getElementById","value","getplayer2","placeholder","startgame","App","checkWinner","x","y","first","second","state","indx","finished","setState","win","playerone","playertwo","alert","setplayername","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.76624cfb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Cell extends React.Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n  get_char(type) {\r\n    if (type == -1) {\r\n      return \"\";\r\n    } else if (type == 0) {\r\n      return \"O\";\r\n    } else {\r\n      return \"X\";\r\n    }\r\n  }\r\n  render() {\r\n    const id = this.props.id;\r\n    console.log(id);\r\n    const type = this.props.cellbox.val;\r\n    const turn = this.props.getturn();\r\n    return (\r\n      <div className=\"Cell\">\r\n        <div className={this.props.cellbox.cut}></div>\r\n        <button\r\n          onClick={() => this.props.CellClick(id)}\r\n          className={turn == 0 ? \"cell-btn\" : \"cell-btn-black\"}\r\n        >\r\n          {this.get_char(type)}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cell;\r\n","import React from \"react\";\r\nimport Cell from \"./cell\";\r\n\r\nclass Board extends React.Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n  render() {\r\n    const boardarray = this.props.boardarray;\r\n    return (\r\n      <div className=\"Board\">\r\n        {boardarray.map((cell, index) => {\r\n          return (\r\n            <Cell\r\n              key={index}\r\n              id={index}\r\n              cellbox={cell}\r\n              CellClick={this.props.CellClick}\r\n              getturn={this.props.getturn}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\n\r\nclass Banner extends React.Component\r\n{\r\n  constructor()\r\n  {\r\n    super();\r\n  }\r\n  render()\r\n  {\r\n    let winner=this.props.winner;\r\n    let showBoard=this.props.showBoard;\r\n    let turn=this.props.turn;\r\n    let texttoshow=\"\";\r\n    let p1=this.props.p1;\r\n    let p2=this.props.p2;\r\n    if(showBoard==false)\r\n    {\r\n      texttoshow=\"Click on Start Button\";\r\n    }\r\n    else if(winner.length==0)\r\n    {\r\n        texttoshow=`${turn==0?p1:p2}'s Turn`;\r\n    }\r\n    else\r\n    {\r\n      if(winner=='3')\r\n      {\r\n        texttoshow=\"The Match is Draw!\";\r\n      }\r\n      else\r\n      {\r\n        texttoshow=`${winner=='1'?p1:p2} Won!`;\r\n      }\r\n    }\r\n    return(\r\n    <div className=\"Banner\">\r\n        <div className=\"banner-text\">{texttoshow}</div>\r\n        {showBoard && <button className=\"reset-btn\" onClick={()=>this.props.resetState()}>Reset Game</button>}\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Banner;\r\n","import React from \"react\";\r\n\r\nclass Start extends React.Component\r\n{\r\n  constructor()\r\n  {\r\n    super();\r\n  }\r\n  getplayer1=()=>\r\n  {\r\n      let e=document.getElementById(\"one\");\r\n      return e.value;\r\n  }\r\n  getplayer2=()=>\r\n  {\r\n    let e=document.getElementById(\"two\");\r\n    return e.value;\r\n  }\r\n  render()\r\n  {\r\n    return(\r\n    <div className=\"Start\">\r\n        <input type=\"text\" placeholder=\"Player 1 name here\" id=\"one\"></input>\r\n        <input type=\"text\" placeholder=\"Player 2 name here\" id=\"two\"></input>\r\n        <button className=\"start-btn\" onClick={()=> this.props.startgame(this.getplayer1(),this.getplayer2())}>Start</button>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Start;\r\n","import React from \"react\";\nimport Board from \"./components/board\";\nimport Banner from \"./components/Banner\";\nimport Start from \"./components/start-btn\";\n\n/*\n----> 1 \n----> 2\n----> 3\n\n| | |\n| | |\nv v v\n4 5 6 \n\nprinciple diagonal=7\nanti diagonal=8;\n*/\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      turn: 0,\n      boardarray: [\n        {\n          val: -1,\n          cut: \"\",\n        },\n        {\n          val: -1,\n          cut: \"\",\n        },\n        {\n          val: -1,\n          cut: \"\",\n        },\n        {\n          val: -1,\n          cut: \"\",\n        },\n        {\n          val: -1,\n          cut: \"\",\n        },\n        {\n          val: -1,\n          cut: \"\",\n        },\n        {\n          val: -1,\n          cut: \"\",\n        },\n        {\n          val: -1,\n          cut: \"\",\n        },\n        {\n          val: -1,\n          cut: \"\",\n        },\n      ],\n      winner: \"\",\n      showBoard: false,\n      playerone: \"\",\n      playertwo: \"\",\n      finished: false,\n    };\n  }\n  checkWinner = () => {\n    let x = 0;\n    let y = 0;\n    let first = 1;\n    let second = 1;\n    const boardarray = this.state.boardarray;\n    while (x < 3 && y < 3) {\n      let indx = x * 3 + y;\n      if (boardarray[indx].val != 0) {\n        first = 0;\n      }\n      if (boardarray[indx].val != 1) {\n        second = 0;\n      }\n      x++;\n      y++;\n    }\n    if (first) {\n      return \"17\";\n    }\n    if (second) {\n      return \"27\";\n    }\n    x = 0;\n    y = 0;\n    first = 1;\n    second = 1;\n    while (x < 3 && y < 3) {\n      let indx = x * 3 + y;\n      if (boardarray[indx].val != 0) {\n        first = 0;\n      }\n      if (boardarray[indx].val != 1) {\n        second = 0;\n      }\n      y++;\n    }\n    if (first) {\n      return \"11\";\n    }\n    if (second) {\n      return \"21\";\n    }\n    x = 0;\n    y = 0;\n    first = 1;\n    second = 1;\n    while (x < 3 && y < 3) {\n      let indx = x * 3 + y;\n      if (boardarray[indx].val != 0) {\n        first = 0;\n      }\n      if (boardarray[indx].val != 1) {\n        second = 0;\n      }\n      x++;\n    }\n    if (first) {\n      return \"14\";\n    }\n    if (second) {\n      return \"24\";\n    }\n    x = 0;\n    y = 1;\n    first = 1;\n    second = 1;\n    while (x < 3 && y < 3) {\n      let indx = x * 3 + y;\n      if (boardarray[indx].val != 0) {\n        first = 0;\n      }\n      if (boardarray[indx].val != 1) {\n        second = 0;\n      }\n      x++;\n    }\n    if (first) {\n      return \"15\";\n    }\n    if (second) {\n      return \"25\";\n    }\n    x = 0;\n    y = 2;\n    first = 1;\n    second = 1;\n    while (x < 3 && y < 3) {\n      let indx = x * 3 + y;\n      if (boardarray[indx].val != 0) {\n        first = 0;\n      }\n      if (boardarray[indx].val != 1) {\n        second = 0;\n      }\n      x++;\n    }\n    if (first) {\n      return \"16\";\n    }\n    if (second) {\n      return \"26\";\n    }\n    x = 1;\n    y = 0;\n    first = 1;\n    second = 1;\n    while (x < 3 && y < 3) {\n      let indx = x * 3 + y;\n      if (boardarray[indx].val != 0) {\n        first = 0;\n      }\n      if (boardarray[indx].val != 1) {\n        second = 0;\n      }\n      y++;\n    }\n    if (first) {\n      return \"12\";\n    }\n    if (second) {\n      return \"22\";\n    }\n    x = 2;\n    y = 0;\n    first = 1;\n    second = 1;\n    while (x < 3 && y < 3) {\n      let indx = x * 3 + y;\n      if (boardarray[indx].val != 0) {\n        first = 0;\n      }\n      if (boardarray[indx].val != 1) {\n        second = 0;\n      }\n      y++;\n    }\n    if (first) {\n      return \"13\";\n    }\n    if (second) {\n      return \"23\";\n    }\n    x = 0;\n    y = 2;\n    first = 1;\n    second = 1;\n    while (x < 3 && y >= 0) {\n      let indx = x * 3 + y;\n      if (boardarray[indx].val != 0) {\n        first = 0;\n      }\n      if (boardarray[indx].val != 1) {\n        second = 0;\n      }\n      y--;\n      x++;\n    }\n    if (first) {\n      return \"18\";\n    }\n    if (second) {\n      return \"28\";\n    }\n    for (x = 0; x < 9; x++) {\n      if (boardarray[x].val == -1) {\n        return \"0\";\n      }\n    }\n    return \"3\";\n  };\n  CellClick = (id) => {\n    let boardarray = this.state.boardarray;\n    let turn = this.state.turn;\n    let finished = this.state.finished;\n    if (boardarray[id].val == -1 && finished == false) {\n      if (turn == 0) {\n        boardarray[id].val = 0;\n      } else {\n        boardarray[id].val = 1;\n      }\n      turn = 1 - turn;\n      this.setState({\n        turn: turn,\n        boardarray: boardarray,\n      });\n    }\n    console.log(this.state);\n    let win = this.checkWinner();\n    console.log(win);\n    boardarray = this.state.boardarray;\n    if (win[0] == \"1\" || win[0] == \"2\") {\n      let x = 0,\n        y = 0;\n      switch (win[1]) {\n        case \"1\": {\n          console.log(\"inside 1\");\n          x = 0;\n          y = 0;\n          while (x < 3 && y < 3) {\n            let indx = x * 3 + y;\n            boardarray[indx].cut = \"line-horizontal\";\n            y++;\n          }\n          break;\n        }\n        case \"2\": {\n          console.log(\"inside 2\");\n          x = 1;\n          y = 0;\n          while (x < 3 && y < 3) {\n            let indx = x * 3 + y;\n            boardarray[indx].cut = \"line-horizontal\";\n            y++;\n          }\n          break;\n        }\n        case \"3\": {\n          console.log(\"inside 3\");\n          x = 2;\n          y = 0;\n          while (x < 3 && y < 3) {\n            let indx = x * 3 + y;\n            boardarray[indx].cut = \"line-horizontal\";\n            y++;\n          }\n          break;\n        }\n        case \"4\": {\n          console.log(\"inside 4\");\n          x = 0;\n          y = 0;\n          while (x < 3 && y < 3) {\n            let indx = x * 3 + y;\n            boardarray[indx].cut = \"line-vertical\";\n            x++;\n          }\n          break;\n        }\n        case \"5\": {\n          console.log(\"inside 5\");\n          x = 0;\n          y = 1;\n          while (x < 3 && y < 3) {\n            let indx = x * 3 + y;\n            boardarray[indx].cut = \"line-vertical\";\n            x++;\n          }\n          break;\n        }\n        case \"6\": {\n          x = 0;\n          y = 2;\n          while (x < 3 && y < 3) {\n            let indx = x * 3 + y;\n            boardarray[indx].cut = \"line-vertical\";\n            x++;\n          }\n          break;\n        }\n        case \"7\": {\n          x = 0;\n          y = 0;\n          while (x < 3 && y < 3) {\n            let indx = x * 3 + y;\n            boardarray[indx].cut = \"tilt\";\n            x++;\n            y++;\n          }\n          break;\n        }\n        case \"8\": {\n          x = 0;\n          y = 2;\n          while (x < 3 && y >= 0) {\n            let indx = x * 3 + y;\n            boardarray[indx].cut = \"anti-tilt\";\n            y--;\n            x++;\n          }\n          break;\n        }\n        default: {\n        }\n      }\n      this.setState({\n        winner: win[0],\n        boardarray: boardarray,\n        finished: true,\n      });\n    } else if (win[0] == \"3\") {\n      this.setState({\n        winner: win[0],\n        boardarray: boardarray,\n        finished: true,\n      });\n    }\n  };\n  getturn = () => {\n    return this.state.turn;\n  };\n  startgame = (p1, p2) => {\n    console.log(p1, p2);\n    if (p1.length != 0 && p2.length != 0) {\n      this.setState({\n        showBoard: true,\n        playerone: p1,\n        playertwo: p2,\n      });\n    } else {\n      alert(\"One or more Player Name missing!\");\n    }\n  };\n  setplayername = (p1, p2) => {\n    this.setState({\n      playerone: p1,\n      playertwo: p2,\n    });\n  };\n  resetState = () => {\n    this.setState({\n      turn: 0,\n      boardarray: [\n        {\n          val: -1,\n          cut: \"\",\n        },\n        {\n          val: -1,\n          cut: \"\",\n        },\n        {\n          val: -1,\n          cut: \"\",\n        },\n        {\n          val: -1,\n          cut: \"\",\n        },\n        {\n          val: -1,\n          cut: \"\",\n        },\n        {\n          val: -1,\n          cut: \"\",\n        },\n        {\n          val: -1,\n          cut: \"\",\n        },\n        {\n          val: -1,\n          cut: \"\",\n        },\n        {\n          val: -1,\n          cut: \"\",\n        },\n      ],\n      winner: \"\",\n      showBoard: false,\n      finished: false,\n    });\n  };\n  render() {\n    return (\n      <div>\n        <Banner\n          resetState={this.resetState}\n          turn={this.state.turn}\n          winner={this.state.winner}\n          showBoard={this.state.showBoard}\n          p1={this.state.playerone}\n          p2={this.state.playertwo}\n        />\n        {this.state.showBoard ? (\n          <Board\n            boardarray={this.state.boardarray}\n            CellClick={this.CellClick}\n            getturn={this.getturn}\n          />\n        ) : (\n          <Start startgame={this.startgame} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}